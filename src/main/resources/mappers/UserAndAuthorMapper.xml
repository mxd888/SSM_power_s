<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdu.mxd.mapper.UserAndAuthor">



    <select id="getUserAndPower" parameterType="String" resultType="userAndPower">
        select u.* , p.power from user u , powers p where u.username = #{username} and u.author=p.author
    </select>



    <resultMap type="user" id="userClassMap">
        <id property="id" column="Id"/>
        <result property="username" column="username"/>
        <association property="sclass" javaType="sclass">
            <result property="s_name" column="s_name"/>
            <result property="s_num" column="s_num"/>
        </association>
    </resultMap>


    <select id="getUserClass" resultMap="userClassMap">
        select u.Id , u.username, s.s_name, s.s_num from user u, sclass s where u.s_Id = s.s_id
    </select>

    <!--<resultMap type="sclass" id="classStudentQuery">
        <id property="s_id" column="s_id"/>
        <result property="s_name" column="s_name"/>
        <collection property="users" ofType="user">
            <id property="id" column="Id"/>
            <result property="username" column="username"/>
        </collection>
    </resultMap>

    <select id="getClassStudent" parameterType="int" resultMap="classStudentQuery">
    select s.*, u.Id, u.username from sclass s, user u where u.s_id = s.s_id and s.s_id = #{sid}
    </select>-->


   <!-- <resultMap type="user" id="studentAllClass_query">
        <id property="id" column="user_id"/>
        <result property="username" column="username"/>
        <collection property="courses" ofType="course">
            <id property="c_id" column="c_id"/>
            <result property="c_name" column="c_name"/>
        </collection>
    </resultMap>

    <select id="studentAllClass" parameterType="int" resultMap="studentAllClass_query">
	select * from course c, user u, stu_course sc where u.Id = sc.user_id and sc.course_id = c.c_id and u.Id = #{uid}
    </select>-->



    <!-- 查询某个课程下的所有所选课程 -->
    <resultMap type="courseWithUser" id="ClassAllStudent_query">
        <id property="c_id" column="c_id"/>
        <result property="c_name" column="c_name"/>
        <collection property="user" ofType="user">
            <id property="id" column="Id"/>
            <result property="username" column="username"/>
        </collection>
    </resultMap>

    <select id="CourseAllStudent" parameterType="int" resultMap="ClassAllStudent_query">
	select * from course c, user u, stu_course sc where u.Id = sc.user_id and sc.course_id = c.c_id and c.c_id= #{cid}
    </select>





    <select id="findUserById" parameterType="int" resultType="user_m">
        SELECT * FROM user WHERE id=#{id}
    </select>

    <select id="findAllUser" resultType="user">
        SELECT Id , username, password FROM user;
    </select>



    <select id="Login" parameterType="String" resultType="int">
        SELECT count(*) FROM user WHERE username=#{username} and password = #{password}
    </select>

    <update id="modifyUserById" parameterType="user_m">
       update user set username = #{username} ,password = #{password} where id = #{id}
    </update>
    <delete id="deleteUserById">
     	delete  from user where id=#{id}
    </delete>

    <insert id="insertUserById" parameterType="user">
	  insert into user values(null,#{username},#{password},#{sId},0)
	</insert>



    <!--课程信息的添加、修改和删除-->

    <update id="modifyCourseById" parameterType="course">
       update course set c_name = #{cName} where c_id = #{cId}
    </update>
    <delete id="deleteCourseById">
     	delete  from course where c_id=#{cid}
    </delete>

    <insert id="insertCourseById" parameterType="course">
	  insert into course values(#{cId},#{cName})
	</insert>


    <!--班级信息的添加、修改和删除-->

    <update id="modifyClassById" parameterType="sclass">
       update sclass set s_name = #{sName} where s_id = #{sId}
    </update>
    <delete id="deleteClassById">
     	delete  from sclass where s_id = #{sId}
    </delete>

    <insert id="insertClassById" parameterType="sclass">
	  insert into sclass values(null,#{sName},0)
	</insert>


    <select id="findUserIdByUserName" parameterType="String" resultType="int">
        select Id from user where username = #{username}

    </select>
    <!--学生选课信息的修改和删除-->

    <update id="modifyCourseWithUserById" parameterType="courseWithUserToUser">
       update stu_course set course_id = #{cId} where Id = #{id}
    </update>
    <delete id="deleteCourseWithUserById">
     	delete  from stu_course where id=#{id}
    </delete>

    <insert id="insertCourseWithUserById" parameterType="courseWithUserToUser">
	  insert into stu_course values(null,#{id},#{cId})
	</insert>



    <!--查询用户所选课程-->
    <select id="findCourseByUserId" resultType="course" parameterType="String">
        SELECT sc.Id AS cId,c_name FROM user u ,course c, stu_course sc where u.Id = sc.user_id and c.c_id = sc.course_id and u.username =#{username};
    </select>


    <!--查询所有用户所选课程-->
    <select id="findCourseAll" resultType="CourseAndUserName">
        SELECT sc.Id AS cId,sc.user_id AS uId,c_name ,username FROM user u ,course c, stu_course sc where u.Id = sc.user_id and c.c_id = sc.course_id;
    </select>

</mapper>